buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}

plugins {
    id "com.jfrog.artifactory" version "4.9.8"
}

apply plugin: 'net.minecraftforge.gradle'

apply plugin: 'java-library'
apply plugin: 'eclipse'
apply plugin: 'idea'

group = "net.voxelindustry"
compileJava.options.encoding = 'UTF-8'

compileJava {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

apply plugin: "maven-publish"
apply plugin: "com.jfrog.artifactory"

artifactory {
    contextUrl = "${artifactory_contextUrl}"
    publish {
        repository {
            repoKey = 'voxelindustry'
            username = "${artifactory_user}"
            password = "${artifactory_password}"
            maven = true
        }
        defaults {
            publications ('mavenJava')
        }
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}

repositories {
    maven { url 'http://maven.ferenyr.info/artifactory/libs-release'}
    mavenCentral()
}

jar {
    duplicatesStrategy = 'exclude'
    exclude('net/voxelindustry/brokkgui/demo/**')
}

def reobfFile = file("$buildDir/reobfJar/output.jar")
def reobfArtifact = artifacts.add('default', reobfFile) {
    type 'jar'
    builtBy 'reobfJar'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifactId archivesBaseName
            artifact reobfArtifact
            artifact source: sourcesJar, classifier: 'sources', extension: 'jar'

            // Allows the maven pom file to be modified.
            pom.withXml {
                // Go through all the dependencies.
                asNode().dependencies.dependency.each { dep ->

                    // Check if the dependency has been mapped with MCP
                    if (dep.version.last().value().last().contains('_mapped_snapshot_') || dep.version.last().value().last().contains('_mapped_stable_')) {

                        // Remove the MCP mapped artifact from the dependency list.
                        println 'Surpressing MCP mapped artifact ' + dep.artifactId.last().value().last() + ' from maven dependencies.'
                        assert dep.parent().remove(dep)
                    }
                }
            }
        }
    }
}

artifactoryPublish.dependsOn build

minecraft {
    mappings channel: 'snapshot', version: '20190719-1.14.3'

        runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            mods {
                brokkguiwrapper {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            mods {
                brokkguiwrapper {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'brokkguiwrapper', '--mod', 'brokkguidemo', '--all', '--output', file('src/generated/resources/')

            mods {
                brokkguiwrapper {
                    source sourceSets.main
                }
            }
        }
    }
}

archivesBaseName = "brokkgui-binding-mc1.14"
version = project.brokkgui_version

dependencies {
    api "net.voxelindustry:brokkgui-core:${project.brokkgui_version}"
    minecraft "net.minecraftforge:forge:${project.forge_version}"
}

jar {
    manifest {
        attributes([
            "Specification-Title": "brokkgui-binding-mc1.14",
            "Specification-Vendor": "brokkgui-binding-mc1.14",
            "Specification-Version": "1",
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"brokkgui",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}